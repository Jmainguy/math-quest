{"ast":null,"code":"import React,{useState,useEffect}from'react';import ScratchPad from'./ScratchPad';import Question from'./Question';import{generateRandomQuestion}from'../utils/mathUtils';import'../App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[maxValue,setMaxValue]=useState(10);const[operation,setOperation]=useState('both');const[currentQuestion,setCurrentQuestion]=useState(null);const[feedback,setFeedback]=useState('');const[isDesktop,setIsDesktop]=useState(window.innerWidth>768);useEffect(()=>{const handleResize=()=>{setIsDesktop(window.innerWidth>768);};window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);const handleMaxValueChange=event=>{setMaxValue(Number(event.target.value));};const handleOperationChange=selectedOperation=>{setOperation(selectedOperation);};const startNewQuestion=()=>{const{question,answer}=generateRandomQuestion(0,maxValue,operation);setCurrentQuestion({question,answer});setFeedback('');};const handleAnswer=isCorrect=>{if(isCorrect){startNewQuestion();// Trigger positive feedback animation and sound\ntriggerPositiveFeedback();}else{setFeedback('❌ Oops! Try again. You can do it!');}};const triggerPositiveFeedback=()=>{setFeedback('🎉 Great job! That\\'s correct! 🎉');// Remove the feedback message after 3 seconds\nsetTimeout(()=>{setFeedback('');},2000);for(let i=0;i<5;i++){const feedbackElement=document.createElement('div');feedbackElement.className='positive-feedback';feedbackElement.innerHTML='🦄🎉🦄✨🦄🌈🦄';feedbackElement.style.top=\"\".concat(Math.random()*100,\"%\");feedbackElement.style.left=\"\".concat(Math.random()*100,\"%\");document.body.appendChild(feedbackElement);setTimeout(()=>{feedbackElement.remove();},2000);}const audio=new Audio('/celebration-sound.mp3');audio.play();};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Math Quest: Unicorns and Rainbows\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Max Value:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:maxValue,onChange:handleMaxValueChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Operation:\",/*#__PURE__*/_jsxs(\"select\",{value:operation,onChange:e=>handleOperationChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"addition\",children:\"Addition\"}),/*#__PURE__*/_jsx(\"option\",{value:\"subtraction\",children:\"Subtraction\"}),/*#__PURE__*/_jsx(\"option\",{value:\"both\",children:\"Both\"})]})]})]}),/*#__PURE__*/_jsx(Question,{operation:operation,min:0,max:maxValue,onAnswer:handleAnswer}),/*#__PURE__*/_jsx(\"div\",{className:\"feedback\",children:feedback})]}),isDesktop&&/*#__PURE__*/_jsx(ScratchPad,{})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","ScratchPad","Question","generateRandomQuestion","jsx","_jsx","jsxs","_jsxs","App","maxValue","setMaxValue","operation","setOperation","currentQuestion","setCurrentQuestion","feedback","setFeedback","isDesktop","setIsDesktop","window","innerWidth","handleResize","addEventListener","removeEventListener","handleMaxValueChange","event","Number","target","value","handleOperationChange","selectedOperation","startNewQuestion","question","answer","handleAnswer","isCorrect","triggerPositiveFeedback","setTimeout","i","feedbackElement","document","createElement","className","innerHTML","style","top","concat","Math","random","left","body","appendChild","remove","audio","Audio","play","children","type","onChange","e","min","max","onAnswer"],"sources":["/home/jmainguy/Github/math-quest/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScratchPad from './ScratchPad';\nimport Question from './Question';\nimport { generateRandomQuestion } from '../utils/mathUtils';\nimport '../App.css';\n\nconst App = () => {\n  const [maxValue, setMaxValue] = useState(10);\n  const [operation, setOperation] = useState('both');\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsDesktop(window.innerWidth > 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleMaxValueChange = (event) => {\n    setMaxValue(Number(event.target.value));\n  };\n\n  const handleOperationChange = (selectedOperation) => {\n    setOperation(selectedOperation);\n  };\n\n  const startNewQuestion = () => {\n    const { question, answer } = generateRandomQuestion(0, maxValue, operation);\n    setCurrentQuestion({ question, answer });\n    setFeedback('');\n  };\n\n  const handleAnswer = (isCorrect) => {\n    if (isCorrect) {\n      startNewQuestion();\n      // Trigger positive feedback animation and sound\n      triggerPositiveFeedback();\n    } else {\n      setFeedback('❌ Oops! Try again. You can do it!');\n    }\n  };\n\n  const triggerPositiveFeedback = () => {\n    setFeedback('🎉 Great job! That\\'s correct! 🎉');\n\n    // Remove the feedback message after 3 seconds\n    setTimeout(() => {\n      setFeedback('');\n    }, 2000);\n    for (let i = 0; i < 5; i++) {\n      const feedbackElement = document.createElement('div');\n      feedbackElement.className = 'positive-feedback';\n      feedbackElement.innerHTML = '🦄🎉🦄✨🦄🌈🦄';\n      feedbackElement.style.top = `${Math.random() * 100}%`;\n      feedbackElement.style.left = `${Math.random() * 100}%`;\n      document.body.appendChild(feedbackElement);\n\n      setTimeout(() => {\n        feedbackElement.remove();\n      }, 2000);\n    }\n\n    const audio = new Audio('/celebration-sound.mp3');\n    audio.play();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"main-content\">\n        <h1>Math Quest: Unicorns and Rainbows</h1>\n        <div className=\"input-container\">\n          <label>\n            Max Value:\n            <input type=\"number\" value={maxValue} onChange={handleMaxValueChange} />\n          </label>\n          <label>\n            Operation:\n            <select value={operation} onChange={(e) => handleOperationChange(e.target.value)}>\n              <option value=\"addition\">Addition</option>\n              <option value=\"subtraction\">Subtraction</option>\n              <option value=\"both\">Both</option>\n            </select>\n          </label>\n        </div>\n        <Question operation={operation} min={0} max={maxValue} onAnswer={handleAnswer} />\n        <div className=\"feedback\">{feedback}</div>\n      </div>\n      {isDesktop && <ScratchPad />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}