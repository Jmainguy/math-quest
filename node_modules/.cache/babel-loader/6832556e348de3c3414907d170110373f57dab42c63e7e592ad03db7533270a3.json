{"ast":null,"code":"export function generateRandomQuestion(min, max, operation) {\n  let num1 = Math.floor(Math.random() * (max - min + 1)) + min;\n  let num2 = Math.floor(Math.random() * (max - min + 1)) + min;\n  const generateAddition = () => {\n    return {\n      question: `${num1} + ${num2}`,\n      answer: num1 + num2\n    };\n  };\n  const generateSubtraction = () => {\n    // Ensure num1 is always greater than or equal to num2\n    if (num1 < num2) {\n      [num1, num2] = [num2, num1]; // Swap num1 and num2\n    }\n    return {\n      question: `${num1} - ${num2}`,\n      answer: num1 - num2\n    };\n  };\n  if (operation === 'addition') {\n    return generateAddition();\n  } else if (operation === 'subtraction') {\n    return generateSubtraction();\n  } else {\n    // Randomly pick addition or subtraction\n    return Math.random() < 0.5 ? generateAddition() : generateSubtraction();\n  }\n}\nexport function validateAnswer(userAnswer, correctAnswer) {\n  return userAnswer === correctAnswer;\n}","map":{"version":3,"names":["generateRandomQuestion","min","max","operation","num1","Math","floor","random","num2","generateAddition","question","answer","generateSubtraction","validateAnswer","userAnswer","correctAnswer"],"sources":["/home/jmainguy/Github/math-quest/src/utils/mathUtils.js"],"sourcesContent":["export function generateRandomQuestion(min, max, operation) {\n  let num1 = Math.floor(Math.random() * (max - min + 1)) + min;\n  let num2 = Math.floor(Math.random() * (max - min + 1)) + min;\n\n  const generateAddition = () => {\n    return {\n      question: `${num1} + ${num2}`,\n      answer: num1 + num2,\n    };\n  };\n\n  const generateSubtraction = () => {\n    // Ensure num1 is always greater than or equal to num2\n    if (num1 < num2) {\n      [num1, num2] = [num2, num1]; // Swap num1 and num2\n    }\n    return {\n      question: `${num1} - ${num2}`,\n      answer: num1 - num2,\n    };\n  };\n\n  if (operation === 'addition') {\n    return generateAddition();\n  } else if (operation === 'subtraction') {\n    return generateSubtraction();\n  } else {\n    // Randomly pick addition or subtraction\n    return Math.random() < 0.5 ? generateAddition() : generateSubtraction();\n  }\n}\n\nexport function validateAnswer(userAnswer, correctAnswer) {\n  return userAnswer === correctAnswer;\n}\n"],"mappings":"AAAA,OAAO,SAASA,sBAAsBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAE;EAC1D,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC5D,IAAIO,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAE5D,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAO;MACLC,QAAQ,EAAE,GAAGN,IAAI,MAAMI,IAAI,EAAE;MAC7BG,MAAM,EAAEP,IAAI,GAAGI;IACjB,CAAC;EACH,CAAC;EAED,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,IAAIR,IAAI,GAAGI,IAAI,EAAE;MACf,CAACJ,IAAI,EAAEI,IAAI,CAAC,GAAG,CAACA,IAAI,EAAEJ,IAAI,CAAC,CAAC,CAAC;IAC/B;IACA,OAAO;MACLM,QAAQ,EAAE,GAAGN,IAAI,MAAMI,IAAI,EAAE;MAC7BG,MAAM,EAAEP,IAAI,GAAGI;IACjB,CAAC;EACH,CAAC;EAED,IAAIL,SAAS,KAAK,UAAU,EAAE;IAC5B,OAAOM,gBAAgB,CAAC,CAAC;EAC3B,CAAC,MAAM,IAAIN,SAAS,KAAK,aAAa,EAAE;IACtC,OAAOS,mBAAmB,CAAC,CAAC;EAC9B,CAAC,MAAM;IACL;IACA,OAAOP,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAGE,gBAAgB,CAAC,CAAC,GAAGG,mBAAmB,CAAC,CAAC;EACzE;AACF;AAEA,OAAO,SAASC,cAAcA,CAACC,UAAU,EAAEC,aAAa,EAAE;EACxD,OAAOD,UAAU,KAAKC,aAAa;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}