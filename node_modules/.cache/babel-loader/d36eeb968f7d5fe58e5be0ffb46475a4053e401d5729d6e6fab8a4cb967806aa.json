{"ast":null,"code":"export function generateRandomQuestion(min,max,operation){let num1=Math.floor(Math.random()*(max-min+1))+min;let num2=Math.floor(Math.random()*(max-min+1))+min;const generateAddition=()=>{return{question:\"\".concat(num1,\" + \").concat(num2),answer:num1+num2};};const generateSubtraction=()=>{// Ensure num1 is always greater than or equal to num2\nif(num1<num2){[num1,num2]=[num2,num1];// Swap num1 and num2\n}return{question:\"\".concat(num1,\" - \").concat(num2),answer:num1-num2};};if(operation==='addition'){return generateAddition();}else if(operation==='subtraction'){return generateSubtraction();}else{// Randomly pick addition or subtraction\nreturn Math.random()<0.5?generateAddition():generateSubtraction();}}export function validateAnswer(userAnswer,correctAnswer){return userAnswer===correctAnswer;}","map":{"version":3,"names":["generateRandomQuestion","min","max","operation","num1","Math","floor","random","num2","generateAddition","question","concat","answer","generateSubtraction","validateAnswer","userAnswer","correctAnswer"],"sources":["/home/jmainguy/Github/cb-math/src/utils/mathUtils.js"],"sourcesContent":["export function generateRandomQuestion(min, max, operation) {\n  let num1 = Math.floor(Math.random() * (max - min + 1)) + min;\n  let num2 = Math.floor(Math.random() * (max - min + 1)) + min;\n\n  const generateAddition = () => {\n    return {\n      question: `${num1} + ${num2}`,\n      answer: num1 + num2,\n    };\n  };\n\n  const generateSubtraction = () => {\n    // Ensure num1 is always greater than or equal to num2\n    if (num1 < num2) {\n      [num1, num2] = [num2, num1]; // Swap num1 and num2\n    }\n    return {\n      question: `${num1} - ${num2}`,\n      answer: num1 - num2,\n    };\n  };\n\n  if (operation === 'addition') {\n    return generateAddition();\n  } else if (operation === 'subtraction') {\n    return generateSubtraction();\n  } else {\n    // Randomly pick addition or subtraction\n    return Math.random() < 0.5 ? generateAddition() : generateSubtraction();\n  }\n}\n\nexport function validateAnswer(userAnswer, correctAnswer) {\n  return userAnswer === correctAnswer;\n}\n"],"mappings":"AAAA,MAAO,SAAS,CAAAA,sBAAsBA,CAACC,GAAG,CAAEC,GAAG,CAAEC,SAAS,CAAE,CAC1D,GAAI,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIL,GAAG,CAAGD,GAAG,CAAG,CAAC,CAAC,CAAC,CAAGA,GAAG,CAC5D,GAAI,CAAAO,IAAI,CAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIL,GAAG,CAAGD,GAAG,CAAG,CAAC,CAAC,CAAC,CAAGA,GAAG,CAE5D,KAAM,CAAAQ,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,MAAO,CACLC,QAAQ,IAAAC,MAAA,CAAKP,IAAI,QAAAO,MAAA,CAAMH,IAAI,CAAE,CAC7BI,MAAM,CAAER,IAAI,CAAGI,IACjB,CAAC,CACH,CAAC,CAED,KAAM,CAAAK,mBAAmB,CAAGA,CAAA,GAAM,CAChC;AACA,GAAIT,IAAI,CAAGI,IAAI,CAAE,CACf,CAACJ,IAAI,CAAEI,IAAI,CAAC,CAAG,CAACA,IAAI,CAAEJ,IAAI,CAAC,CAAE;AAC/B,CACA,MAAO,CACLM,QAAQ,IAAAC,MAAA,CAAKP,IAAI,QAAAO,MAAA,CAAMH,IAAI,CAAE,CAC7BI,MAAM,CAAER,IAAI,CAAGI,IACjB,CAAC,CACH,CAAC,CAED,GAAIL,SAAS,GAAK,UAAU,CAAE,CAC5B,MAAO,CAAAM,gBAAgB,CAAC,CAAC,CAC3B,CAAC,IAAM,IAAIN,SAAS,GAAK,aAAa,CAAE,CACtC,MAAO,CAAAU,mBAAmB,CAAC,CAAC,CAC9B,CAAC,IAAM,CACL;AACA,MAAO,CAAAR,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,GAAG,CAAGE,gBAAgB,CAAC,CAAC,CAAGI,mBAAmB,CAAC,CAAC,CACzE,CACF,CAEA,MAAO,SAAS,CAAAC,cAAcA,CAACC,UAAU,CAAEC,aAAa,CAAE,CACxD,MAAO,CAAAD,UAAU,GAAKC,aAAa,CACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}